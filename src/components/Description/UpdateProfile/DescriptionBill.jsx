import Box from '../../Box/Box';
import { Typography } from 'antd';
import { useForm } from 'react-hook-form';
import { Button } from '@mui/material';
import ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';
import Constants from '../../../utils/constants';
import axios from 'axios'
import { useEffect } from 'react';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
const { Title } = Typography;
const UpdateProfile = () => {
    const { register, handleSubmit, watch, formState: { errors } } = useForm();
    const [districts, setDistricts] = useState([]);
    const navigate = useNavigate()

    const [wards, setWards] = useState([]);
    const watchProvince = watch('ProvinceId')
    useEffect(() => {
        axios
            .get(`https://vn-public-apis.fpo.vn/provinces/getAll?limit=-1`)
            .then((response) => {
                console.log("üöÄ ~ .then ~ response:", response)
            })
            .catch((error) => {
                console.error(error);
            });
    }, []);

    const onSubmit = (data) => {
        console.log(data);
    };
    return (
        <div className='flex flex-col justify-start  gap-2'>
            <Box
                description={'Vui l√≤ng cung c·∫•p th√¥ng tin ch√≠nh x√°c ƒë·ªÉ ƒë∆∞·ª£c ph·ª•c v·ª• t·ªët nh·∫•t. Trong tr∆∞·ªùng h·ª£p cung c·∫•p sai th√¥ng tin b·ªánh nh√¢n & ƒëi·ªán tho·∫°i, vi·ªác x√°c nh·∫≠n cu·ªôc h·∫πn s·∫Ω kh√¥ng hi·ªáu l·ª±c tr∆∞·ªõc khi ƒë·∫∑t kh√°m.'}
            />
            <span className='text-red text-xl '>(*) Th√¥ng tin b·∫Øt bu·ªôc nh·∫≠p</span>
            <form className="mt-4 flex flex-col gap-3" onSubmit={handleSubmit(onSubmit)}>
                <div className="flex flex-row gap-10 justify-between">
                    <div className='w-1/2'>
                        <Title level={4}>H·ªç v√† t√™n (c√≥ d·∫•u)*</Title>
                        <input
                            type="text"
                            placeholder="Ho√†ng VƒÉn A"
                            className="w-full border border-slate-200 rounded-lg py-3 px-5 outline-none  bg-transparent"
                            {...register('fullName', { required: true })}
                        />
                        {errors.fullName && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                    <div className='w-1/2'>
                        <Title level={4}>Ng√†y sinh *</Title>
                        <input
                            type="date"
                            placeholder="mm/dd/yyyy"
                            className="w-full border border-slate-200 rounded-lg py-3 px-5 outline-none  bg-transparent"
                            {...register('dob', { required: true })}
                        />
                        {errors.dob && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                </div>
                <div className="flex flex-row gap-10 justify-between">
                    <div className='w-1/2'>
                        <Title level={4}>S·ªë ƒëi·ªán tho·∫°i *</Title>
                        <input
                            type="tel" id="phone"
                            placeholder="09202020201"
                            className="w-full border border-slate-200 rounded-lg py-3 px-5 outline-none  bg-transparent"
                            {...register('job', { required: true })}
                        />
                        {errors.job && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                    <div className='w-1/2'>
                        <Title level={4}>Gi·ªõi t√≠nh*</Title>
                        <select
                            type="text"
                            placeholder="dd/mm/yyyy"
                            className="w-full border border-slate-200 rounded-lg py-3 px-3 outline-none  bg-transparent"
                        >
                            <option className='rounded-sm' value="">Ch·ªçn gi·ªõi t√≠nh</option>
                            <option value="male">Nam</option>
                            <option value="female">N·ªØ</option>
                            <option value="other">Kh√°c</option>
                        </select>
                        {errors.gender && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                </div>
                <div className="flex flex-row gap-10 justify-between">
                    <div className='w-1/2'>
                        <Title level={4}>Ngh·ªÅ nghi·ªáp *</Title>
                        <input
                            type="text"
                            placeholder="Nh·∫≠p ngh·ªÅ nhi·ªáp"
                            className="w-full border border-slate-200 rounded-lg py-3 px-5 outline-none  bg-transparent"
                            {...register('job', { required: true })}
                        />
                        {errors.job && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                    <div className='w-1/2'>
                        <Title level={4}>S·ªë CMND/CCCD *</Title>
                        <input
                            type="number"
                            placeholder="Nh·∫≠p s·ªë CMND/CCCD"
                            className="w-full border border-slate-200 rounded-lg py-3 px-5 outline-none  bg-transparent"
                            {...register('CCCD', { required: true })}
                        />
                        {errors.CCCD && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                </div>
                <div className="flex flex-row gap-10 justify-between">
                    <div className='w-1/2'>
                        <Title level={4}>ƒê·ªãa ch·ªâ Email *</Title>
                        <input
                            type="email"
                            placeholder="nguyenvana@gmail.com"
                            className="w-full border border-slate-200 rounded-lg py-3 px-5 outline-none  bg-transparent"
                            {...register('Email', { required: true })}
                        />
                        {errors.Email && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                    <div className='w-1/2'>
                        <Title level={4}>D√¢n t·ªôc *</Title>
                        <select
                            type="text"
                            placeholder="dd/mm/yyyy"
                            className="w-full border border-slate-200 rounded-lg py-3 px-3 outline-none  bg-transparent"
                            {...register('Nation', { required: true })}
                        >
                            {Constants.nationVN?.map((item, index) => (
                                <option key={index} value={item?.value}>{item?.label}</option>
                            ))}
                        </select>
                        {errors.Nation && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                </div>

                <div className="flex flex-row gap-10 justify-between">
                    <div className='w-1/2'>
                        <Title level={4}>T·ªânh / Th√†nh *</Title>
                        <select
                            type="text"
                            placeholder="Ch·ªçn t·ªânh / th√†nh ph·ªë"
                            className="w-full border border-slate-200 rounded-lg py-3 px-3 outline-none  bg-transparent"
                            {...register('ProvinceId', { required: true })}
                        >
                            {Constants.vietnamProvinces?.map((item, index) => (
                                <option key={index} value={item?.value}>{item?.label}</option>
                            ))}
                        </select>
                        {errors.ProvinceId && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                    <div className='w-1/2'>
                        <Title level={4}>Qu·∫≠n / Huy·ªán *</Title>
                        <select
                            type="text"
                            placeholder="Ch·ªçn qu·∫≠n / huy·ªán"
                            className="w-full border border-slate-200 rounded-lg py-3 px-3 outline-none  bg-transparent"
                        // {...register('District', { required: true })}
                        >
                            {districts?.map((item, index) => (
                                <option key={index} value={item?.value}>{item?.label}</option>
                            ))}
                        </select>
                        {errors.District && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                </div>

                <div className="flex flex-row gap-10 justify-between">
                    <div className='w-1/2'>
                        <Title level={4}>Ph∆∞·ªùng / X√£ *</Title>
                        <select
                            type="text"
                            placeholder="Ch·ªçn ph∆∞·ªùng / x√£"
                            className="w-full border border-slate-200 rounded-lg py-3 px-3 outline-none  bg-transparent"
                        // {...register('Wards', { required: true })}
                        >
                            {/* {Constants.vietnamProvinces?.map((item, index) => (
                                <option key={index} value={item?.value}>{item?.label}</option>
                            ))} */}
                        </select>
                        {errors.Wards && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                    <div className='w-1/2'>
                        <Title level={4}>ƒê·ªãa ch·ªâ *</Title>
                        <input
                            type="text"
                            placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ"
                            className="w-full border border-slate-200 rounded-lg py-3 px-3 outline-none  bg-transparent"
                            {...register('Address', { required: true })}
                        />
                        {errors.Address && <span className="text-red">B·∫Øt bu·ªôc nh·∫≠p th√¥ng tin</span>}
                    </div>
                </div>

                <div className="flex flex-row items-end justify-between">
                    <Button
                        startIcon={<ArrowBackIosNewIcon />}
                        className='w-28' href="#text-buttons" onClick={() => navigate(-1)}>Quay l·∫°i</Button>
                    <Button type="submit" variant="contained" className='w-24 float-right rounded-md'>L∆∞u</Button>
                </div>
            </form>
        </div>
    );
};

export default UpdateProfile;